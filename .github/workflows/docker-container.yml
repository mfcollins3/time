name: Docker Container

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  packages: write

jobs:
  build-binaries:
    name: Build Linux Binaries
    uses: ./.github/workflows/linux-builds.yml
    with:
      build-tags: 'docker'

  build-and-push:
    name: Build and Push Docker Image
    needs: build-binaries
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Download AMD64 artifact
        uses: actions/download-artifact@v4
        with:
          name: time-linux-amd64
          path: ./artifacts/amd64

      - name: Download ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: time-linux-arm64
          path: ./artifacts/arm64

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr-
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix=sha-
            type=raw,value=latest,enable={{is_default_branch}}
          labels: |
            org.opencontainers.image.title=Time
            org.opencontainers.image.description=Pomodoro Technique time management application
            org.opencontainers.image.vendor=mfcollins3

      - name: Build and push AMD64 image
        id: build-amd64
        uses: docker/build-push-action@v6
        with:
          context: ./artifacts/amd64
          file: ./Dockerfile
          platforms: linux/amd64
          outputs: type=image,name=ghcr.io/${{ github.repository }},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=amd64
          cache-to: type=gha,mode=max,scope=amd64

      - name: Build and push ARM64 image
        id: build-arm64
        uses: docker/build-push-action@v6
        with:
          context: ./artifacts/arm64
          file: ./Dockerfile
          platforms: linux/arm64
          outputs: type=image,name=ghcr.io/${{ github.repository }},push-by-digest=true,name-canonical=true,push=true
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=arm64
          cache-to: type=gha,mode=max,scope=arm64

      - name: Create and push multi-platform manifest
        run: |
          # Extract tags from metadata action output
          TAGS="${{ steps.meta.outputs.tags }}"
          
          # Create manifest for each tag
          while IFS= read -r tag; do
            if [ -n "$tag" ]; then
              echo "Creating manifest for $tag"
              docker buildx imagetools create \
                --tag "${tag}" \
                "${{ steps.build-amd64.outputs.digest }}" \
                "${{ steps.build-arm64.outputs.digest }}"
            fi
          done <<< "$TAGS"
